name: "MiniNet"
#image/labels layers for training
#input layer
layer {
  name: "images"
  type: "Data"
  top: "images"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "../Database/train_data_mean.binaryproto"
  }
  data_param {
    source: "../Database/train_data_lmdb"
    batch_size: 2
    backend: LMDB
  }
}
#labels layer
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TRAIN
  }
  transform_param {
    mean_file: "../Database/train_label_mean.binaryproto"
  }
  data_param {
    source: "../Database/train_label_lmdb"
    batch_size: 2
    backend: LMDB
  }
}

# Now for the test
layer {
  name: "images"
  type: "Data"
  top: "images"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "../Database/val_data_mean.binaryproto"
  }
  data_param {
    source: "../Database/val_data_lmdb"
    batch_size:2
    backend: LMDB
  }
}
#labels layer
layer {
  name: "labels"
  type: "Data"
  top: "labels"
  include {
    phase: TEST
  }
  transform_param {
    mean_file: "../Database/val_label_mean.binaryproto"
  }
  data_param {
    source: "../Database/val_label_lmdb"
    batch_size: 2
    backend: LMDB
  }
}



layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "images"
  top: "fcout"
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#layer {
#  name: "accuracy"
#  type: "Accuracy"
#  bottom: "fc8"
#  bottom: "labels"
#  top: "accuracy"
#  include {
#    phase: TEST
#  }
#}

layer {
  name: "loss"
  type: "EuclideanLoss"
  bottom: "fcout"
  bottom: "labels"
  top: "loss"
}
